// <auto-generated />
using System;
using DLEFCore2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DLEFCore2.Migrations
{
    [DbContext(typeof(DLEFCoreContext))]
    partial class DLEFCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DLEFCore2.Repository.Samples.DataTypesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Bigint")
                        .HasColumnType("bigint");

                    b.Property<bool>("Boolean1")
                        .HasColumnType("bit");

                    b.Property<bool?>("Boolean2")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Decimal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Float")
                        .HasColumnType("float");

                    b.Property<int>("Integer")
                        .HasColumnType("int");

                    b.Property<string>("NVarChar1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NVarChar2")
                        .IsRequired()
                        .HasMaxLength(257)
                        .HasColumnType("nvarchar(257)");

                    b.Property<float>("Real")
                        .HasColumnType("real");

                    b.Property<string>("field")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataTypes");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.EntityIdModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("EntityId");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.EntityNoIdModel", b =>
                {
                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.ToTable("EntityNoId");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.GenderTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("-1");

                    b.HasKey("Id");

                    b.ToTable("GenderType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Male",
                            Disabled = false,
                            IsDefault = true,
                            Name = "Male",
                            OrderBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Female",
                            Disabled = false,
                            IsDefault = false,
                            Name = "Female",
                            OrderBy = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Other",
                            Disabled = false,
                            IsDefault = false,
                            Name = "Other",
                            OrderBy = 3
                        });
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.GroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.UserGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersGroups");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("GenderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenderTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.UserGroupModel", b =>
                {
                    b.HasOne("DLEFCore2.Repository.Samples.GroupModel", "Group")
                        .WithMany("GroupUsers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLEFCore2.Repository.Samples.UserModel", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.UserModel", b =>
                {
                    b.HasOne("DLEFCore2.Repository.Samples.GenderTypeModel", "GenderType")
                        .WithMany()
                        .HasForeignKey("GenderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenderType");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.GroupModel", b =>
                {
                    b.Navigation("GroupUsers");
                });

            modelBuilder.Entity("DLEFCore2.Repository.Samples.UserModel", b =>
                {
                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
